basePath: /
definitions:
  service.ErrorResponse:
    properties:
      error:
        type: string
      message:
        description: Оставляем пустым, если нет доп. сообщения
        type: string
    type: object
  service.ShortenRequest:
    properties:
      url:
        type: string
    required:
    - url
    type: object
  service.ShortenResponse:
    properties:
      id:
        type: integer
      short_url:
        type: string
    type: object
host: 172.27.227.76:8080
info:
  contact: {}
  description: API для сокращения URL
  title: URL Shortener API
  version: "1.0"
paths:
  /{short}:
    get:
      description: Перенаправляет пользователя на оригинальный URL
      parameters:
      - description: Короткий URL
        in: path
        name: short
        required: true
        type: string
      produces:
      - application/json
      responses:
        "301":
          description: Moved Permanently
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Перенаправление по короткому URL
  /shorten:
    post:
      consumes:
      - application/json
      description: Принимает оригинальный URL и возвращает сокращённый
      parameters:
      - description: URL для сокращения
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.ShortenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ с сокращённым URL
          schema:
            $ref: '#/definitions/service.ShortenResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/service.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/service.ErrorResponse'
      summary: Создать короткий URL
swagger: "2.0"
